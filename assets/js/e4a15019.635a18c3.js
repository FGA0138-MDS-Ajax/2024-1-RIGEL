"use strict";(self.webpackChunkrigel_ghpages=self.webpackChunkrigel_ghpages||[]).push([[675],{2274:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var a=o(4848),t=o(8453);const n={sidebar_position:4},r="Plano de Testes",i={id:"Documentos/plano-de-testes",title:"Plano de Testes",description:"Um documento de plano de testes para software \xe9 essencial para garantir a qualidade e a efici\xeancia no desenvolvimento de um produto. Ele detalha a estrat\xe9gia de testes, objetivos, recursos, e os crit\xe9rios de aceita\xe7\xe3o, fornecendo uma vis\xe3o clara e estruturada de como os testes ser\xe3o conduzidos. Este planejamento ajuda a identificar poss\xedveis falhas e problemas antes que o software seja lan\xe7ado, minimizando riscos e custos associados a corre\xe7\xf5es posteriores. Al\xe9m disso, promove a comunica\xe7\xe3o e o alinhamento entre as equipes de desenvolvimento, testes e outras partes interessadas, assegurando que todos estejam cientes dos processos e expectativas. Assim, um plano de testes bem elaborado \xe9 crucial para entregar um software confi\xe1vel e de alta qualidade.",source:"@site/docs/Documentos/plano-de-testes.md",sourceDirName:"Documentos",slug:"/Documentos/plano-de-testes",permalink:"/2024-1-RIGEL/docs/Documentos/plano-de-testes",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Sum\xe1rio Executivo",permalink:"/2024-1-RIGEL/docs/Documentos/sumario-executivo"},next:{title:"Caso de Uso",permalink:"/2024-1-RIGEL/docs/Documentos/caso-de-uso"}},d={},c=[];function l(e){const s={a:"a",h1:"h1",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h1,{id:"plano-de-testes",children:"Plano de Testes"}),"\n",(0,a.jsxs)("div",{className:"justify-text",children:[" Um documento de plano de testes para software \xe9 essencial para garantir a qualidade e a efici\xeancia no desenvolvimento de um produto. Ele detalha a estrat\xe9gia de testes, objetivos, recursos, e os crit\xe9rios de aceita\xe7\xe3o, fornecendo uma vis\xe3o clara e estruturada de como os testes ser\xe3o conduzidos. Este planejamento ajuda a identificar poss\xedveis falhas e problemas antes que o software seja lan\xe7ado, minimizando riscos e custos associados a corre\xe7\xf5es posteriores. Al\xe9m disso, promove a comunica\xe7\xe3o e o alinhamento entre as equipes de desenvolvimento, testes e outras partes interessadas, assegurando que todos estejam cientes dos processos e expectativas. Assim, um plano de testes bem elaborado \xe9 crucial para entregar um software confi\xe1vel e de alta qualidade",(0,a.jsx)("span",{style:{color:"#fcba03"},children:(0,a.jsx)(s.strong,{children:"."})})," "]}),"\n",(0,a.jsx)(s.h1,{id:""}),"\n",(0,a.jsxs)(s.p,{children:["Acesso em: ",(0,a.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:o(737).A+"",children:"Plano de Testes"})]})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},737:(e,s,o)=>{o.d(s,{A:()=>a});const a=o.p+"assets/files/RIGEL-DriverPlan-PlanoDeTestes-66a3ba0c112741f0a166375cff641485.pdf"},8453:(e,s,o)=>{o.d(s,{R:()=>r,x:()=>i});var a=o(6540);const t={},n=a.createContext(t);function r(e){const s=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(n.Provider,{value:s},e.children)}}}]);